import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
plt.style.use ('ggplot') 
iris = load_iris()
X = iris.data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

pca = PCA(n_components=0.95)

X_pca = pca.fit_transform(X_scaled)

print("Number of retained components:", pca.n_components_)

print("Variance explained by each component:", pca.explained_variance_ratio_)

print("Reduced-dimension dataset shape:", X_pca.shape)

plt.figure(figsize=(8,6))
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=iris.target, cmap='viridis', edgecolor='k')
plt.title('PCA of Iris Dataset')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.colorbar(label='Target Class')
plt.show()
___________-___________________________________________________________________________
import os
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt

path = "Iris_data_sample.csv"

df = pd.read_csv(path)
print("Original Dataset:")
print(df.head())


df = pd.read_csv(path, na_values=["??", "###"])
print("\nDataset after removing ? and ###:")
print(df.head())

df["SepalLengthCm"].fillna(df["SepalLengthCm"].mean(), inplace=True)
df["SepalWidthCm"].fillna(df["SepalWidthCm"].mean(), inplace=True)
df["PetalLengthCm"].fillna(df["PetalLengthCm"].mean(), inplace=True)
df["PetalWidthCm"].fillna(df["PetalWidthCm"].mean(), inplace=True)
df["Species"].fillna(df["Species"].mode()[0], inplace=True)
print("\nDataset after filling missing values:")
print(df.head())

scaler = StandardScaler()
df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']] = scaler.fit_transform(df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']])
print("\nDataset after standardization:")
print(df.head())

pca = PCA(n_components=2)
principal_components = pca.fit_transform(df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']])
print("\nShape of the data after PCA:")
print(principal_components.shape)

pca_df = pd.DataFrame(data=principal_components, columns=['Principal Component 1', 'Principal Component 2'])
pca_df = pd.concat([pca_df, df[['Species']]], axis=1)

print("\nData after PCA:")
print(pca_df.head())

plt.figure(figsize=(10, 7))

colors = {'Iris-setosa': 'red', 'Iris-versicolor': 'blue', 'Iris-virginica': 'green'}


for species in pca_df['Species'].unique():
    subset = pca_df[pca_df['Species'] == species]
    plt.scatter(subset['Principal Component 1'], subset['Principal Component 2'], 
                c=colors[species], label=species, edgecolor='k', s=50)

plt.title('PCA of Iris Dataset')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.legend(loc='best')
plt.grid(True)
plt.show()
